This is the tools I developped for the cryptopals challenges. I am also learning python in the same time.

----------------------------------------

Example of usage: ./crypto [-options] [function] [argument1] [argument2] [arguments...]

./crypto.py --> will list all the available function
./crypto.py -h --> Same as ./crypto.py
./crypto.py textToSBits "test 1 2 3" --> output the bit representation as string: 01110100011001010111001101110100001000000011000100100000001100100010000000110011
./crypto.py sBitsToText 01110100011001010111001101110100001000000011000100100000001100100010000000110011 --> ouput: test 1 2 3
./crypto.py caesar "test 1 2 3" 5 --> Do the ceasar encryption with a shift of 5 (default shift is 3). Output: yjxy 1 2 3
./crypto.py caesar "test 1 2 3" --> same as ./crypto.py caesar "test 1 2 3" 3
./crypto.py caesar "yjxy 1 2 3" -5 --> output: test 1 2 3
./crypto.py bruteForceCaesarAndRotX "yjxy 1 2 3" --> output: test 1 2 3. Presently, only letter frequency are used. I plan to use word detection.


----------------------------------------

Available options: (need to be called like this: ./crypto.sh -lsn)

	if "-" in sys.argv[1]:
            firstIndex = 2
            if "h" in sys.argv[1]:
                print globals().keys()
                exit()
            if "t" in sys.argv[1]:
                print "TEST OPTION"

                exit()
            if "l" in sys.argv[1]:
                toLower = 1
            if "u" in sys.argv[1]:
                toUpper = 1
            if "s" in sys.argv[1]:
                removeSpace = 1
            if "n" in sys.argv[1]:
                removeNewLine = 1
            if "p" in sys.argv[1]:
                piped = 1
            if "o" in sys.argv[1]:
                outputToFile = 1
            if "a" in sys.argv[1]:
                inputIsArrayString = 1

